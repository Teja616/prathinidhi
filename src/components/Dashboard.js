import React, { useEffect, useState } from 'react';
import { useLocation, useNavigate } from 'react-router-dom';

const translations = {
  en: {
    welcome: 'Welcome',
    governmentOfIndia: 'Government of India',
    ministryOfLaw: 'Ministry of Law and Justice',
    fileForms: 'File Legal Forms',
    newForm: 'ЁЯУД File New Legal Form',
    continueDraft: 'ЁЯУЭ Continue Draft Application',
    uploadDocs: 'ЁЯУд Upload Supporting Documents',
    acceptedFormats: 'Accepted formats: PDF, JPG, PNG',
    statusTitle: 'ЁЯУК Application Status Overview',
    drafts: 'Draft Applications',
    submitted: 'Submitted Applications',
    uploaded: 'Uploaded Documents',
    logout: 'ЁЯЪк Logout',
    language: 'ЁЯМР Language',
    userDetails: 'User Details',
    aadhaar: 'Aadhaar',
    mobile: 'Mobile',
    otp: 'OTP',
    quickLinks: 'Quick Links',
    faqs: 'FAQs',
    userGuide: 'User Guide',
    govPortal: 'Government Portal',
    terms: 'Terms of Use',
    contact: 'Contact Support',
    email: 'Email',
    phone: 'Phone',
    hours: 'Hours',
    name : "Name",
    role:"Role",
    address: 'Address',
    about: 'About Platform',
    aboutText: 'This platform is developed under the Digital India initiative to streamline legal application services for all citizens in multiple regional languages.',
    copyright: () => `┬й ${new Date().getFullYear()} Government of India. All Rights Reserved. ЁЯЗоЁЯЗ│`,
    popupTitle: 'Select Language',
    applicationType: "Application Type",
    receivedThrough: "Received Through",
    problemSummary: "Problem Summary",
    religion: "Religion",
    caste: "Caste",
    occupation: "Occupation",
    timestamp: "Timestamp"
  },
  ta: {
    aadhaar: 'роЖродро╛ро░рпН',
    mobile: 'роорпКрокрпИро▓рпН',
    otp: 'роТро░рпБ родроЯро╡рпИ роХроЯро╡рпБроЪрпНроЪрпКро▓рпН (OTP)',
    welcome: 'ро╡ро░ро╡рпЗро▒рпНроХро┐ро▒рпЛроорпН',
    fileForms: 'роЪроЯрпНроЯ рокроЯро┐ро╡роЩрпНроХро│рпИ родро╛роХрпНроХро▓рпН роЪрпЖропрпНропро╡рпБроорпН',
    newForm: 'ЁЯУД рокрпБродро┐роп роЪроЯрпНроЯ рокроЯро┐ро╡родрпНродрпИ родро╛роХрпНроХро▓рпН роЪрпЖропрпНропро╡рпБроорпН',
    continueDraft: 'ЁЯУЭ роХро░рпИроЪро▓рпН ро╡ро┐рогрпНрогрокрпНрокродрпНродрпИ родрпКроЯро░ро╡рпБроорпН',
    uploadDocs: 'ЁЯУд роЖродро╛ро░ роЖро╡рогроЩрпНроХро│рпИ рокродро┐ро╡рпЗро▒рпНро▒ро╡рпБроорпН',
    acceptedFormats: 'роПро▒рпНроХрокрпНрокроЯрпБроорпН ро╡роЯро┐ро╡роЩрпНроХро│рпН: PDF, JPG, PNG',
    statusTitle: 'ЁЯУК ро╡ро┐рогрпНрогрокрпНрок роиро┐ро▓рпИроорпЗро▒рпНроХрпЛро│рпН',
    drafts: 'роХро░рпИроЪро▓рпН ро╡ро┐рогрпНрогрокрпНрокроЩрпНроХро│рпН',
    submitted: 'родро╛роХрпНроХро▓рпН роЪрпЖропрпНропрокрпНрокроЯрпНроЯ ро╡ро┐рогрпНрогрокрпНрокроЩрпНроХро│рпН',
    uploaded: 'рокродро┐ро╡рпЗро▒рпНро▒рокрпНрокроЯрпНроЯ роЖро╡рогроЩрпНроХро│рпН',
    logout: 'ЁЯЪк ро╡рпЖро│ро┐ропрпЗро▒рпБ',
    language: 'ЁЯМР роорпКро┤ро┐',
    quickLinks: 'ро╡ро┐ро░рпИро╡рпБ роЗрогрпИрокрпНрокрпБроХро│рпН',
    faqs: 'роЕроЯро┐роХрпНроХроЯро┐ роХрпЗроЯрпНроХрокрпНрокроЯрпБроорпН роХрпЗро│рпНро╡ро┐роХро│рпН',
    userGuide: 'рокропройро░рпН ро╡ро┤ро┐роХро╛роЯрпНроЯро┐',
    govPortal: 'роЕро░роЪрпБ рокрпЛро░рпНроЯро▓рпН',
    terms: 'рокропройрпНрокро╛роЯрпНроЯрпБ ро╡ро┐родро┐роорпБро▒рпИроХро│рпН',
    contact: 'роЖродро░ро╡рпИ родрпКроЯро░рпНрокрпБ роХрпКро│рпНро│ро╡рпБроорпН',
    email: 'рооро┐ройрпНройроЮрпНроЪро▓рпН',
    phone: 'родрпКро▓рпИрокрпЗроЪро┐',
    hours: 'ро╡рпЗро▓рпИ роирпЗро░роорпН',
    address: 'роорпБроХро╡ро░ро┐',
    about: 'родро│родрпНродрпИрокрпН рокро▒рпНро▒ро┐',
    aboutText: 'роЗроирпНрод родро│роорпН "роЯро┐роЬро┐роЯрпНроЯро▓рпН роЗроирпНродро┐ропро╛" роорпБропро▒рпНроЪро┐ропро┐ройрпН роХрпАро┤рпН, рокро▓ роорогрпНроЯро▓ роорпКро┤ро┐роХро│ро┐ро▓рпН роЙро│рпНро│ роХрпБроЯро┐роороХрпНроХро│рпБроХрпНроХрпБ роЪроЯрпНроЯ роЪрпЗро╡рпИроХро│рпИ роОро│ро┐роорпИрокрпНрокроЯрпБродрпНрод роЙро░рпБро╡ро╛роХрпНроХрокрпНрокроЯрпНроЯрпБро│рпНро│родрпБ.',
    copyright: () => `┬й ${new Date().getFullYear()} роЗроирпНродро┐роп роЕро░роЪрпБ. роЕройрпИродрпНродрпБ роЙро░ро┐роорпИроХро│рпБроорпН рокро╛родрпБроХро╛роХрпНроХрокрпНрокроЯрпНроЯро╡рпИ. ЁЯЗоЁЯЗ│`,
    popupTitle: 'роорпКро┤ро┐ропрпИ родрпЗро░рпНроирпНродрпЖроЯрпБроХрпНроХро╡рпБроорпН',
    applicationType: "ро╡ро┐рогрпНрогрокрпНрок ро╡роХрпИ",
receivedThrough: "рокрпЖро▒рокрпНрокроЯрпНроЯ ро╡ро┤ро┐",
problemSummary: "рокро┐ро░роЪрпНроЪройрпИ роЪрпБро░рпБроХрпНроХроорпН",
religion: "роородроорпН",
caste: "роЪро╛родро┐",
occupation: "родрпКро┤ро┐ро▓рпН",
timestamp: "роирпЗро░роорпБродрпНродро┐ро░рпИ",
  },
  hi: {
    aadhaar: 'рдЖрдзрд╛рд░',
    mobile: 'рдореЛрдмрд╛рдЗрд▓',
    otp: 'рдУрдЯреАрдкреА',
    welcome: 'рд╕реНрд╡рд╛рдЧрдд рд╣реИ',
    fileForms: 'рдХрд╛рдиреВрдиреА рдлреЙрд░реНрдо рднрд░реЗрдВ',
    newForm: 'ЁЯУД рдирдпрд╛ рдХрд╛рдиреВрдиреА рдлреЙрд░реНрдо рднрд░реЗрдВ',
    continueDraft: 'ЁЯУЭ рдбреНрд░рд╛рдлреНрдЯ рдЖрд╡реЗрджрди рдЬрд╛рд░реА рд░рдЦреЗрдВ',
    uploadDocs: 'ЁЯУд рд╕рд╣рд╛рдпрдХ рджрд╕реНрддрд╛рд╡реЗрдЬрд╝ рдЕрдкрд▓реЛрдб рдХрд░реЗрдВ',
    acceptedFormats: 'рд╕реНрд╡реАрдХреГрдд рдкреНрд░рд╛рд░реВрдк: PDF, JPG, PNG',
    statusTitle: 'ЁЯУК рдЖрд╡реЗрджрди рд╕реНрдерд┐рддрд┐ рдХрд╛ рдЕрд╡рд▓реЛрдХрди',
    drafts: 'рдбреНрд░рд╛рдлреНрдЯ рдЖрд╡реЗрджрди',
    submitted: 'рдкреНрд░рд╕реНрддреБрдд рдЖрд╡реЗрджрди',
    uploaded: 'рдЕрдкрд▓реЛрдб рдХрд┐рдП рдЧрдП рджрд╕реНрддрд╛рд╡реЗрдЬрд╝',
    logout: 'ЁЯЪк рд▓реЙрдЧрдЖрдЙрдЯ',
    language: 'ЁЯМР рднрд╛рд╖рд╛',
    quickLinks: 'рддреНрд╡рд░рд┐рдд рд▓рд┐рдВрдХ',
    faqs: 'рдЕрдХреНрд╕рд░ рдкреВрдЫреЗ рдЬрд╛рдиреЗ рд╡рд╛рд▓реЗ рдкреНрд░рд╢реНрди',
    userGuide: 'рдЙрдкрдпреЛрдЧрдХрд░реНрддрд╛ рдорд╛рд░реНрдЧрджрд░реНрд╢рд┐рдХрд╛',
    govPortal: 'рд╕рд░рдХрд╛рд░реА рдкреЛрд░реНрдЯрд▓',
    terms: 'рдЙрдкрдпреЛрдЧ рдХреА рд╢рд░реНрддреЗрдВ',
    contact: 'рд╕рд╣рд╛рдпрддрд╛ рд╕реЗ рд╕рдВрдкрд░реНрдХ рдХрд░реЗрдВ',
    email: 'рдИрдореЗрд▓',
    phone: 'рдлреЛрди',
    hours: 'рдШрдВрдЯреЗ',
    address: 'рдкрддрд╛',
    about: 'рдкреНрд▓реЗрдЯрдлрд╝реЙрд░реНрдо рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ',
    aboutText: 'рдпрд╣ рдкреНрд▓реЗрдЯрдлрд╝реЙрд░реНрдо рдбрд┐рдЬрд┐рдЯрд▓ рдЗрдВрдбрд┐рдпрд╛ рдкрд╣рд▓ рдХреЗ рддрд╣рдд рдирд╛рдЧрд░рд┐рдХреЛрдВ рдХреЗ рд▓рд┐рдП рдмрд╣реБрднрд╛рд╖реА рдХрд╛рдиреВрдиреА рд╕реЗрд╡рд╛рдУрдВ рдХреЛ рд╕рд░рд▓ рдмрдирд╛рдиреЗ рдХреЗ рд▓рд┐рдП рд╡рд┐рдХрд╕рд┐рдд рдХрд┐рдпрд╛ рдЧрдпрд╛ рд╣реИред',
    copyright: () => `┬й ${new Date().getFullYear()} рднрд╛рд░рдд рд╕рд░рдХрд╛рд░ред рд╕рд░реНрд╡рд╛рдзрд┐рдХрд╛рд░ рд╕реБрд░рдХреНрд╖рд┐рддред ЁЯЗоЁЯЗ│`,
    popupTitle: 'рднрд╛рд╖рд╛ рдЪреБрдиреЗрдВ',
    applicationType: "рдЖрд╡реЗрджрди рдХрд╛ рдкреНрд░рдХрд╛рд░",
receivedThrough: "рдкреНрд░рд╛рдкреНрдд рдорд╛рдзреНрдпрдо",
problemSummary: "рд╕рдорд╕реНрдпрд╛ рдХрд╛ рд╕рд╛рд░рд╛рдВрд╢",
religion: "рдзрд░реНрдо",
caste: "рдЬрд╛рддрд┐",
occupation: "рд╡реНрдпрд╡рд╕рд╛рдп",
timestamp: "рд╕рдордп рдЯрд┐рдХрдЯ",
  },
  te: {
    aadhaar: 'р░Жр░зр░╛р░░р▒Н',
    mobile: 'р░ор▒Кр░мр▒Ир░▓р▒Н',
    otp: 'р░Ур░Яр▒Ар░кр▒А',
    welcome: 'р░╕р▒Нр░╡р░╛р░Чр░др░В',
    fileForms: 'р░Ър░Яр▒Нр░Яр░кр░░р░ор▒Ир░и р░лр░╛р░░р░╛р░▓р░ир▒Б р░жр░╛р░Цр░▓р▒Б р░Ър▒Зр░пр░Вр░бр░┐',
    newForm: 'ЁЯУД р░Хр▒Кр░др▒Нр░д р░лр░╛р░░р░В р░жр░╛р░Цр░▓р▒Б р░Ър▒Зр░пр░Вр░бр░┐',
    continueDraft: 'ЁЯУЭ р░ор▒Бр░╕р░╛р░пр░┐р░жр░╛ р░жр░░р░Цр░╛р░╕р▒Нр░др▒Бр░ир▒Б р░Хр▒Кр░ир░╕р░╛р░Чр░┐р░Вр░Ър░Вр░бр░┐',
    uploadDocs: 'ЁЯУд р░ор░жр▒Нр░жр░др▒Б р░кр░др▒Нр░░р░╛р░▓р░ир▒Б р░Ер░кр▒НтАМр░▓р▒Лр░бр▒Н р░Ър▒Зр░пр░Вр░бр░┐',
    acceptedFormats: 'р░Ер░Вр░Чр▒Ар░Хр░░р░┐р░Вр░Ър░┐р░и р░лр░╛р░░р▒Нр░ор░╛р░Яр▒Нр░▓р▒Б: PDF, JPG, PNG',
    statusTitle: 'ЁЯУК р░жр░░р░Цр░╛р░╕р▒Нр░др▒Б р░╕р▒Нр░ер░┐р░др░┐ р░Ер░╡р░▓р▒Лр░Хр░ир░В',
    drafts: 'р░ор▒Бр░╕р░╛р░пр░┐р░жр░╛ р░жр░░р░Цр░╛р░╕р▒Нр░др▒Бр░▓р▒Б',
    submitted: 'р░жр░╛р░Цр░▓р▒Б р░Ър▒Зр░╕р░┐р░и р░жр░░р░Цр░╛р░╕р▒Нр░др▒Бр░▓р▒Б',
    uploaded: 'р░Ер░кр▒НтАМр░▓р▒Лр░бр▒Н р░Ър▒Зр░╕р░┐р░и р░кр░др▒Нр░░р░╛р░▓р▒Б',
    logout: 'ЁЯЪк р░▓р░╛р░Чр▒Мр░Яр▒Н',
    language: 'ЁЯМР р░нр░╛р░╖',
    quickLinks: 'р░др▒Нр░╡р░░р░┐р░д р░▓р░┐р░Вр░Хр▒Бр░▓р▒Б',
    faqs: 'р░др░░р░Ър▒Бр░Чр░╛ р░Ер░бр░┐р░Чр▒З р░кр▒Нр░░р░╢р▒Нр░ир░▓р▒Б',
    userGuide: 'р░╡р░┐р░ир░┐р░пр▒Лр░Чр░жр░╛р░░р▒Бр░▓ р░Чр▒Ир░бр▒Н',
    govPortal: 'р░кр▒Нр░░р░нр▒Бр░др▒Нр░╡ р░кр▒Лр░░р▒Нр░Яр░▓р▒Н',
    terms: 'р░╡р░┐р░ир░┐р░пр▒Лр░Ч р░ир░┐р░мр░Вр░зр░ир░▓р▒Б',
    contact: 'р░╕р░╣р░╛р░пр░В р░Хр▒Лр░╕р░В р░╕р░Вр░кр▒Нр░░р░жр░┐р░Вр░Ър░Вр░бр░┐',
    email: 'р░Зр░ор▒Жр░пр░┐р░▓р▒Н',
    phone: 'р░лр▒Лр░ир▒Н',
    hours: 'р░кр░ир░┐р░Ър▒Зр░╕р▒З р░Чр░Вр░Яр░▓р▒Б',
    address: 'р░Ър░┐р░░р▒Бр░ир░╛р░ор░╛',
    about: 'р░╡р▒Зр░жр░┐р░Х р░Чр▒Бр░░р░┐р░Вр░Ър░┐',
    aboutText: 'р░И р░╡р▒Зр░жр░┐р░Х р░бр░┐р░Ьр░┐р░Яр░▓р▒Н р░Зр░Вр░бр░┐р░пр░╛ р░Ър▒Кр░░р░╡р░▓р▒Л р░нр░╛р░Чр░Вр░Чр░╛ р░нр░╛р░░р░д р░кр▒Мр░░р▒Бр░▓ р░Хр▒Лр░╕р░В р░Ер░ир▒Зр░Х р░кр▒Нр░░р░╛р░Вр░др▒Ар░п р░нр░╛р░╖р░▓р▒Нр░▓р▒Л р░Ър░Яр▒Нр░Яр░кр░░р░ор▒Ир░и р░╕р▒Зр░╡р░▓р░ир▒Б р░╕р░░р░│р▒Ар░Хр▒Гр░др░В р░Ър▒Зр░пр░бр░╛р░ир░┐р░Хр░┐ р░Ер░нр░┐р░╡р▒Гр░жр▒Нр░зр░┐ р░Ър▒Зр░пр░мр░бр░┐р░Вр░жр░┐.',
    copyright: () => `┬й ${new Date().getFullYear()} р░нр░╛р░░р░д р░кр▒Нр░░р░нр▒Бр░др▒Нр░╡р░В. р░Ер░ир▒Нр░ир░┐ р░╣р░Хр▒Нр░Хр▒Бр░▓р▒Б р░ир░┐р░▓р▒Бр░кр▒Бр░Хр▒Лр░мр░бр▒Нр░бр░╛р░пр░┐. ЁЯЗоЁЯЗ│`,
    popupTitle: 'р░нр░╛р░╖ р░Ор░Вр░Ър▒Бр░Хр▒Лр░Вр░бр░┐',
    applicationType: "р░жр░░р░Цр░╛р░╕р▒Нр░др▒Б р░░р░Хр░В",
receivedThrough: "р░Ер░Вр░жр░┐р░и р░ор░╛р░░р▒Нр░Чр░В",
problemSummary: "р░╕р░ор░╕р▒Нр░п р░╕р░Вр░Чр▒Нр░░р░╣р░В",
religion: "р░ор░др░В",
caste: "р░Хр▒Бр░▓р░В",
occupation: "р░╡р▒Гр░др▒Нр░др░┐",
timestamp: "р░╕р░ор░п р░ор▒Бр░жр▒Нр░░",

  },
  bn: {
    aadhaar: 'ржЖржзрж╛рж░',
    mobile: 'ржорзЛржмрж╛ржЗрж▓',
    otp: 'ржУржЯрж┐ржкрж┐',
    welcome: 'рж╕рзНржмрж╛ржЧрждржо',
    fileForms: 'ржЖржЗржирж┐ ржлрж░рзНржо ржЬржорж╛ ржжрж┐ржи',
    newForm: 'ЁЯУД ржирждрзБржи ржЖржЗржирж┐ ржлрж░рзНржо ржЬржорж╛ ржжрж┐ржи',
    continueDraft: 'ЁЯУЭ ржЦрж╕ржбрж╝рж╛ ржЖржмрзЗржжржи ржЪрж╛рж▓рж┐ржпрж╝рзЗ ржпрж╛ржи',
    uploadDocs: 'ЁЯУд рж╕рж╣рж╛ржпрж╝ржХ ржиржерж┐ ржЖржкрж▓рзЛржб ржХрж░рзБржи',
    acceptedFormats: 'ржЧрзГрж╣рзАржд ржлрж░ржорзНржпрж╛ржЯ: PDF, JPG, PNG',
    statusTitle: 'ЁЯУК ржЖржмрзЗржжржи ржЕржмрж╕рзНржерж╛ рж╕ржВржХрзНрж╖рж┐ржкрзНржд ржмрж┐ржмрж░ржг',
    drafts: 'ржЦрж╕ржбрж╝рж╛ ржЖржмрзЗржжржи',
    submitted: 'ржЬржорж╛ ржжрзЗржУржпрж╝рж╛ ржЖржмрзЗржжржи',
    uploaded: 'ржЖржкрж▓рзЛржб ржХрж░рж╛ ржиржерж┐',
    logout: 'ЁЯЪк рж▓ржЧржЖржЙржЯ',
    language: 'ЁЯМР ржнрж╛рж╖рж╛',
    quickLinks: 'ржжрзНрж░рзБржд рж▓рж┐ржЩрзНржХрж╕ржорзВрж╣',
    faqs: 'ржкрзНрж░рж╛ржпрж╝рж╢ржЗ ржЬрж┐ржЬрзНржЮрж╛рж╕рж┐ржд ржкрзНрж░рж╢рзНржирж╛ржмрж▓рзА',
    userGuide: 'ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзА ржЧрж╛ржЗржб',
    govPortal: 'рж╕рж░ржХрж╛рж░рж┐ ржкрзЛрж░рзНржЯрж╛рж▓',
    terms: 'ржмрзНржпржмрж╣рж╛рж░рзЗрж░ рж╢рж░рзНрждрж╛ржмрж▓рзА',
    contact: 'рж╕рж╣рж╛ржпрж╝рждрж╛ ржпрзЛржЧрж╛ржпрзЛржЧ',
    email: 'ржЗржорзЗржЗрж▓',
    phone: 'ржлрзЛржи',
    hours: 'рж╕ржоржпрж╝',
    address: 'ржарж┐ржХрж╛ржирж╛',
    about: 'ржкрзНрж▓рзНржпрж╛ржЯржлрж░рзНржо рж╕ржорзНржкрж░рзНржХрзЗ',
    aboutText: 'ржПржЗ ржкрзНрж▓рзНржпрж╛ржЯржлрж░рзНржоржЯрж┐ ржбрж┐ржЬрж┐ржЯрж╛рж▓ ржЗржирзНржбрж┐ржпрж╝рж╛ ржЙржжрзНржпрзЛржЧрзЗрж░ ржЕржзрзАржирзЗ ржмрж╣рзБ ржнрж╛рж╖рж╛ржпрж╝ ржирж╛ржЧрж░рж┐ржХржжрзЗрж░ ржЬржирзНржп ржЖржЗржирж┐ ржЖржмрзЗржжржи ржкрж░рж┐рж╖рзЗржмрж╛ржЧрзБрж▓рж┐ рж╕рж╣ржЬ ржХрж░рж╛рж░ ржЬржирзНржп рждрзИрж░рж┐ ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗред',
    copyright: () => `┬й ${new Date().getFullYear()} ржнрж╛рж░ржд рж╕рж░ржХрж╛рж░ред рж╕рж░рзНржмрж╕рзНржмрждрзНржм рж╕ржВрж░ржХрзНрж╖рж┐рждред ЁЯЗоЁЯЗ│`,
    popupTitle: 'ржнрж╛рж╖рж╛ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи',
    applicationType: "ржЖржмрзЗржжржи ржкрзНрж░ржХрж╛рж░",
receivedThrough: "ржкрзНрж░рж╛ржкрзНрждрж┐рж░ ржорж╛ржзрзНржпржо",
problemSummary: "рж╕ржорж╕рзНржпрж╛рж░ рж╕рж╛рж░рж╛ржВрж╢",
religion: "ржзрж░рзНржо",
caste: "ржЬрж╛рждрж┐",
occupation: "ржкрзЗрж╢рж╛",
timestamp: "ржЯрж╛ржЗржорж╕рзНржЯрзНржпрж╛ржорзНржк",
  },
};

const Dashboard = () => {
  const location = useLocation();
  const navigate = useNavigate();
  const queryParams = new URLSearchParams(location.search);
  const langParam = queryParams.get('lang')?.toLowerCase() || 'en';
  const [t, setT] = useState(translations.en);
  const [user, setUser] = useState(null);
  const [loading, setLoading] = useState(true);
  const [selectedLanguage, setSelectedLanguage] = useState(langParam);
  const [isPopupOpen, setIsPopupOpen] = useState(false);

  
  useEffect(() => {
    const selected = translations[selectedLanguage] || translations['en'];
    setT(selected);
    // Update URL with selected language
    const newUrl = new URL(window.location.href);
    newUrl.searchParams.set('lang', selectedLanguage);
    window.history.pushState({}, '', newUrl);
  }, [selectedLanguage]);

  useEffect(() => {
    const token = localStorage.getItem('token');
    if (!token) {
      navigate(`/login?lang=${selectedLanguage}`);
      return;
    }

    fetch('https://prathinidhi-backend-b6cg.onrender.com/dashboard', {
      method: 'GET',
      headers: {
        Authorization: `Bearer ${token}`,
        Accept: 'application/json',
      },
    })
      .then((res) => {
        if (!res.ok) throw new Error('Invalid token');
        return res.json();
      })
      .then((data) => setUser(data.user))
      .catch(() => {
        localStorage.removeItem('token');
        navigate(`/login?lang=${selectedLanguage}`);
      })
      .finally(() => setLoading(false));
  }, [selectedLanguage, navigate]);


  
  const handleLogout = () => {
    localStorage.removeItem('token');
    navigate(`/login?lang=${selectedLanguage}`);
  };
  
  const handleLanguageChange = (e) => {
    setSelectedLanguage(e.target.value);
  };

  const handleNewFormClick = () => {
    const token = localStorage.getItem('token');
    // Also store language preference
    localStorage.setItem('preferredLanguage', selectedLanguage);
    navigate('/Complaint', {
      state: { token },
      search: `?lang=${selectedLanguage}`
    });
  };
  // Styles object
  const styles = {
    header: {
      backgroundColor: "#0b5394", // Keep your new background color
      color: "#fff",
      padding: "10px 0", // Changed from 1rem
      position: "fixed", // Changed from relative
      top: 0,
      width: "100%",
      zIndex: 999,
      boxShadow: "0 2px 5px rgba(0,0,0,0.1)" // Updated shadow
    },
    headerContainer: {
      maxWidth: "1200px",
      margin: "0 auto",
      padding: "0 20px", // Added horizontal padding
      display: "flex",
      justifyContent: "space-between",
      alignItems: "center"
    },
    logoSection: {
      display: "flex",
      alignItems: "center",
      gap: "15px" // Changed from 1rem
    },
    logo: {
      height: "48px" // Changed from width: 60px
    },
    title: {
      fontSize: "26px", 
      fontWeight: "bold", 
      margin: 0,
      color: "white" // Kept for visibility on dark background
    },
    subtitle: {
      fontSize: "13px", 
      margin: 0,
      color: "#e0e0e0" // Kept for visibility on dark background
    },
    rightNav: {
      display: 'flex',
      alignItems: 'center',
      gap: '1rem'
    },
    languageSelect: {
      padding: '0.5rem',
      borderRadius: '4px',
      border: '1px solid #d1d5db',
      background: '#f3f4f6',
      cursor: 'pointer'
    },
    logoutBtn: {
      background: '#ef4444',
      color: 'white',
      border: 'none',
      padding: '0.6rem 1.2rem',
      borderRadius: '4px',
      cursor: 'pointer',
      fontWeight: '500',
      transition: 'background 0.2s ease'
    },
    languagePopup: {
      position: 'fixed',
      top: 0,
      left: 0,
      right: 0,
      bottom: 0,
      background: 'rgba(0,0,0,0.5)',
      display: 'flex',
      justifyContent: 'center',
      alignItems: 'center',
      zIndex: 1000
    },
    popupContent: {
      background: 'white',
      padding: '2rem',
      borderRadius: '8px',
      maxWidth: '500px',
      width: '90%',
      textAlign: 'center'
    },
    popupTitle: {
      margin: '0 0 1.5rem 0',
      color: '#1e293b'
    },
    languageButtons: {
      display: 'flex',
      flexWrap: 'wrap',
      justifyContent: 'center',
      gap: '1rem'
    },
    languageButton: {
      padding: '0.8rem 1.5rem',
      background: '#f1f5f9',
      border: '1px solid #e2e8f0',
      borderRadius: '4px',
      cursor: 'pointer',
      fontSize: '1rem',
      transition: 'all 0.2s ease'
    }
  };

  if (loading) return <p style={{ textAlign: 'center', marginTop: '100px' }}>Loading...</p>;

  return (
<div style={{ 
  fontFamily: "Segoe UI, sans-serif", 
  minHeight: '100vh', 
  display: 'flex', 
  flexDirection: 'column', 
  background: 'linear-gradient(to bottom right, #f3f4f6, #e0f2fe)',
  paddingTop: "80px" // Add this to account for fixed header
}}>      
<style>{`
        .nav { display: flex; justify-content: space-between; align-items: center; padding: 1rem; background: #0b5394; color: white; }
        .lang-btn { background: white; color: #4338ca; padding: 0.5rem 1rem; margin-right: 0.5rem; border: none; cursor: pointer; }
        .logout-btn { background: #ef4444; color: white; padding: 0.5rem 1rem; border: none; cursor: pointer; }
        .hero { display: flex; justify-content: center; padding: 2rem; }
        .hero img { width: 100%; max-width: 1000px; border-radius: 1rem; box-shadow: 0 10px 20px rgba(0,0,0,0.15); }
        .main { display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 1.5rem; padding: 2rem; }
        .card { background: white; padding: 1.5rem; border-radius: 1rem; box-shadow: 0 2px 6px rgba(0,0,0,0.1); transition: all 0.3s ease; }
        .card:hover { box-shadow: 0 4px 12px rgba(0,0,0,0.15); }
        .button-primary { background: #4338ca; color: white; padding: 0.75rem; border: none; border-radius: 0.5rem; margin-bottom: 1rem; cursor: pointer; width: 100%; }
        .button-secondary { background: #e5e7eb; color: #111827; padding: 0.75rem; border: none; border-radius: 0.5rem; width: 100%; cursor: pointer; }
        .file-input { display: block; width: 100%; margin: 1rem 0; padding: 0.5rem; }
        .overview { grid-column: span 2; }
        .status-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 1rem; }
        .status-box { padding: 1rem; border-radius: 0.75rem; display: flex; justify-content: space-between; align-items: center; }
        .draft { background: #eef2ff; color: #4338ca; }
        .submitted { background: #dcfce7; color: #15803d; }
        .uploaded { background: #fef9c3; color: #ca8a04; }
        .footer { background: #111827; color: #d1d5db; padding: 2rem; margin-top: auto; }
        .footer h4 { color: white; margin-bottom: 0.5rem; }
        .footer ul { list-style: none; padding: 0; }
        .footer li { margin-bottom: 0.3rem; }
        .footer a { color: #93c5fd; text-decoration: none; }
        .footer a:hover { text-decoration: underline; }
      `}</style>
      
      {/* New Header with Custom Style */}
      <header style={styles.header}>
        <div style={styles.headerContainer}>
          <div style={styles.logoSection}>
          <img src = "./indian-emblem.png" alt = "Indian Emblem" style = {styles.logo}/>
            <img src="/prathinidhi.png" alt="Emblem" style={styles.logo} />
            <div>
              <h1 style={styles.title}>Prathinidhi</h1>
              <p style={styles.subtitle}>
                рд░рд╛рд╖реНрдЯреНрд░реАрдп рдмрд╣реБрднрд╛рд╖реА рд╡рд┐рдзрд┐рдХ рдлреЙрд░реНрдо рдкреЛрд░реНрдЯрд▓ | National Legal Form Portal
              </p>
            </div>
          </div>
          <div style={styles.rightNav}>
            <select
              style={styles.languageSelect}
              value={selectedLanguage}
              onChange={handleLanguageChange}
            >
              <option value="en">English</option>
              <option value="hi">рд╣рд┐рдВрджреА</option>
              <option value="ta">родрооро┐ро┤рпН</option>
              <option value="te">р░др▒Жр░▓р▒Бр░Чр▒Б</option>
              <option value="bn">ржмрж╛ржВрж▓рж╛</option>
            </select>
            <button 
              style={styles.logoutBtn} 
              onClick={handleLogout}
            >
              {t.logout}
            </button>
          </div>
        </div>
      </header>

      {/* Language Selection Pop-Up */}
      {isPopupOpen && (
        <div style={styles.languagePopup}>
          <div style={styles.popupContent}>
            <h2 style={styles.popupTitle}>
              {t.popupTitle}
            </h2>
            <div style={styles.languageButtons}>
              {["en", "hi", "ta", "te", "bn"].map((lang) => (
                <button
                  key={lang}
                  style={styles.languageButton}
                  onClick={() => {
                    setSelectedLanguage(lang);
                    setIsPopupOpen(false);
                  }}
                >
                  {lang === "en"
                    ? "English"
                    : lang === "hi"
                    ? "рд╣рд┐рдВрджреА"
                    : lang === "ta"
                    ? "родрооро┐ро┤рпН"
                    : lang === "te"
                    ? "р░др▒Жр░▓р▒Бр░Чр▒Б"
                    : "ржмрж╛ржВрж▓рж╛"}
                </button>
              ))}
            </div>
          </div>
        </div>
      )}

      <nav className="nav">
        <span>{t.welcome}, {user?.name || 'User'} ({user?.role})</span>
      </nav>

      <div className="hero">
        <img src="/images/prathinidhi.svg" alt="Legal Application India" />
      </div>

      <main className="main">
      <div className="card">
  <h3>{t.userDetails}</h3>
  <p><strong>{t.aadhaar}:</strong> {user?.aadhaar}</p>
  <p><strong>{t.mobile}:</strong> {user?.mobile}</p>
  <p><strong>{t.otp}:</strong> {user?.otp}</p>


</div>

        
        <div className="card">
          <h3>{t.fileForms}</h3>
          <button className="button-primary" onClick={handleNewFormClick}>{t.newForm}</button>
          <button className="button-secondary">{t.continueDraft}</button>
        </div>

        <div className="card">
          <h3>{t.uploadDocs}</h3>
          <input type="file" multiple className="file-input" />
          <p style={{ fontSize: '0.9rem' }}>{t.acceptedFormats}</p>
        </div>

        <div className="card overview">
          <h3>{t.statusTitle}</h3>
          <div className="status-grid">
            <div className="status-box draft">ЁЯУД {t.drafts}: <strong>4</strong></div>
            <div className="status-box submitted">тЬЕ {t.submitted}: <strong>10</strong></div>
            <div className="status-box uploaded">ЁЯУд {t.uploaded}: <strong>6</strong></div>
          </div>
            {/* Display complaints if any */}
  {user?.complaints && user.complaints.length > 0 && (
    <div>
      <h4>{t.complaints}</h4>
      <ul>
        {user.complaints.map((complaint, index) => (
          <li key={index}>
            <p><strong>{t.applicationType}:</strong> {complaint.applicationType}</p>
            <p><strong>{t.receivedThrough}:</strong> {complaint.receivedThrough}</p>
            <p><strong>{t.problemSummary}:</strong> {complaint.problemSummary}</p>
            <p><strong>{t.religion}:</strong> {complaint.religion}</p>
            <p><strong>{t.caste}:</strong> {complaint.caste}</p>
            <p><strong>{t.occupation}:</strong> {complaint.occupation}</p>
            <p><strong>{t.timestamp}:</strong> {complaint.timestamp}</p>
          </li>
        ))}
      </ul>
    </div>
  )}
        </div>

        
      </main>

      <footer className="footer">
        <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(220px, 1fr))', gap: '1.5rem' }}>
          <div>
            <h4>{t.quickLinks}</h4>
            <ul>
              <li><a href="/faqs">{t.faqs}</a></li>
              <li><a href="/user-guide">{t.userGuide}</a></li>
              <li><a href="https://www.india.gov.in/" target="_blank" rel="noopener noreferrer">{t.govPortal}</a></li>
              <li><a href="/terms-and-conditions">{t.terms}</a></li>
            </ul>
          </div>
          <div>
            <h4>{t.contact}</h4>
            <ul>
              <li>{t.phone}: +91-1234-567890</li>
              <li>{t.email}: support@prathinidhi.in</li>
            </ul>
          </div>
        </div>
      </footer>
    </div>
  );
};

export default Dashboard;