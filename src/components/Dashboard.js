import React, { useEffect, useState } from 'react';
import { useLocation, useNavigate } from 'react-router-dom';
import { 
  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer,
  PieChart, Pie, Cell 
} from 'recharts';
import { Calendar, ChevronDown, Bell, Search, FileText, Upload, Clock, CheckCircle, AlertCircle } from 'lucide-react';
const translations = {
  en: { welcome: 'Welcome',
    governmentOfIndia: 'Government of India',
    ministryOfLaw: 'Ministry of Law and Justice',
    fileForms: 'File Legal Forms',
    newForm: 'ЁЯУД File New Legal Form',
    continueDraft: 'ЁЯУЭ Continue Draft Application',
    uploadDocs: 'ЁЯУд Upload Supporting Documents',
    acceptedFormats: 'Accepted formats: PDF, JPG, PNG',
    statusTitle: 'ЁЯУК Application Status Overview',
    drafts: 'Draft Applications',
    submitted: 'Submitted Applications',
    uploaded: 'Uploaded Documents',
    logout: 'ЁЯЪк Logout',
    language: 'ЁЯМР Language',
    userDetails: 'User Details',
    aadhaar: 'Aadhaar',
    mobile: 'Mobile',
    otp: 'OTP',
    quickLinks: 'Quick Links',
    faqs: 'FAQs',
    userGuide: 'User Guide',
    govPortal: 'Government Portal',
    terms: 'Terms of Use',
    contact: 'Contact Support',
    email: 'Email',
    phone: 'Phone',
    hours: 'Hours',
    name : "Name",
    role:"Role",
    address: 'Address',
    about: 'About Platform',
    aboutText: 'This platform is developed under the Digital India initiative to streamline legal application services for all citizens in multiple regional languages.',
    copyright: () => `┬й ${new Date().getFullYear()} Government of India. All Rights Reserved. ЁЯЗоЁЯЗ│`,
    popupTitle: 'Select Language',
    applicationType: "Application Type",
    receivedThrough: "Received Through",
    problemSummary: "Problem Summary",
    religion: "Religion",
    caste: "Caste",
    occupation: "Occupation",
    timestamp: "Timestamp",

    // ЁЯФ╜ New labels for dashboard (Charts, Activity, Footer, etc.)
    formStatus: 'Form Status Distribution',
    monthlySubmissions: 'Monthly Submissions',
    recentActivity: 'Recent Activity',
    viewAllActivity: 'View All Activity',
    quickActions: 'Quick Actions',
    checkStatus: 'Check Status',
    notifications: 'Notifications',
    complaints: 'Your Complaints',
    status: 'Status',
    inProgress: 'In Progress',

    // Footer enhancements
    followUs: 'Follow Us',
    termsAndConditions: 'Terms & Conditions',
  
  },
  ta: {
    aadhaar: 'роЖродро╛ро░рпН',
    mobile: 'роорпКрокрпИро▓рпН',
    otp: 'роТро░рпБ родроЯро╡рпИ роХроЯро╡рпБроЪрпНроЪрпКро▓рпН (OTP)',
    welcome: 'ро╡ро░ро╡рпЗро▒рпНроХро┐ро▒рпЛроорпН',
    fileForms: 'роЪроЯрпНроЯ рокроЯро┐ро╡роЩрпНроХро│рпИ родро╛роХрпНроХро▓рпН роЪрпЖропрпНропро╡рпБроорпН',
    newForm: 'ЁЯУД рокрпБродро┐роп роЪроЯрпНроЯ рокроЯро┐ро╡родрпНродрпИ родро╛роХрпНроХро▓рпН роЪрпЖропрпНропро╡рпБроорпН',
    continueDraft: 'ЁЯУЭ роХро░рпИроЪро▓рпН ро╡ро┐рогрпНрогрокрпНрокродрпНродрпИ родрпКроЯро░ро╡рпБроорпН',
    uploadDocs: 'ЁЯУд роЖродро╛ро░ роЖро╡рогроЩрпНроХро│рпИ рокродро┐ро╡рпЗро▒рпНро▒ро╡рпБроорпН',
    acceptedFormats: 'роПро▒рпНроХрокрпНрокроЯрпБроорпН ро╡роЯро┐ро╡роЩрпНроХро│рпН: PDF, JPG, PNG',
    statusTitle: 'ЁЯУК ро╡ро┐рогрпНрогрокрпНрок роиро┐ро▓рпИроорпЗро▒рпНроХрпЛро│рпН',
    drafts: 'роХро░рпИроЪро▓рпН ро╡ро┐рогрпНрогрокрпНрокроЩрпНроХро│рпН',
    submitted: 'родро╛роХрпНроХро▓рпН роЪрпЖропрпНропрокрпНрокроЯрпНроЯ ро╡ро┐рогрпНрогрокрпНрокроЩрпНроХро│рпН',
    uploaded: 'рокродро┐ро╡рпЗро▒рпНро▒рокрпНрокроЯрпНроЯ роЖро╡рогроЩрпНроХро│рпН',
    logout: 'ЁЯЪк ро╡рпЖро│ро┐ропрпЗро▒рпБ',
    language: 'ЁЯМР роорпКро┤ро┐',
    quickLinks: 'ро╡ро┐ро░рпИро╡рпБ роЗрогрпИрокрпНрокрпБроХро│рпН',
    faqs: 'роЕроЯро┐роХрпНроХроЯро┐ роХрпЗроЯрпНроХрокрпНрокроЯрпБроорпН роХрпЗро│рпНро╡ро┐роХро│рпН',
    userGuide: 'рокропройро░рпН ро╡ро┤ро┐роХро╛роЯрпНроЯро┐',
    govPortal: 'роЕро░роЪрпБ рокрпЛро░рпНроЯро▓рпН',
    terms: 'рокропройрпНрокро╛роЯрпНроЯрпБ ро╡ро┐родро┐роорпБро▒рпИроХро│рпН',
    contact: 'роЖродро░ро╡рпИ родрпКроЯро░рпНрокрпБ роХрпКро│рпНро│ро╡рпБроорпН',
    email: 'рооро┐ройрпНройроЮрпНроЪро▓рпН',
    phone: 'родрпКро▓рпИрокрпЗроЪро┐',
    hours: 'ро╡рпЗро▓рпИ роирпЗро░роорпН',
    address: 'роорпБроХро╡ро░ро┐',
    about: 'родро│родрпНродрпИрокрпН рокро▒рпНро▒ро┐',
    aboutText: 'роЗроирпНрод родро│роорпН "роЯро┐роЬро┐роЯрпНроЯро▓рпН роЗроирпНродро┐ропро╛" роорпБропро▒рпНроЪро┐ропро┐ройрпН роХрпАро┤рпН, рокро▓ роорогрпНроЯро▓ роорпКро┤ро┐роХро│ро┐ро▓рпН роЙро│рпНро│ роХрпБроЯро┐роороХрпНроХро│рпБроХрпНроХрпБ роЪроЯрпНроЯ роЪрпЗро╡рпИроХро│рпИ роОро│ро┐роорпИрокрпНрокроЯрпБродрпНрод роЙро░рпБро╡ро╛роХрпНроХрокрпНрокроЯрпНроЯрпБро│рпНро│родрпБ.',
    copyright: () => `┬й ${new Date().getFullYear()} роЗроирпНродро┐роп роЕро░роЪрпБ. роЕройрпИродрпНродрпБ роЙро░ро┐роорпИроХро│рпБроорпН рокро╛родрпБроХро╛роХрпНроХрокрпНрокроЯрпНроЯро╡рпИ. ЁЯЗоЁЯЗ│`,
    popupTitle: 'роорпКро┤ро┐ропрпИ родрпЗро░рпНроирпНродрпЖроЯрпБроХрпНроХро╡рпБроорпН',
    applicationType: "ро╡ро┐рогрпНрогрокрпНрок ро╡роХрпИ",
receivedThrough: "рокрпЖро▒рокрпНрокроЯрпНроЯ ро╡ро┤ро┐",
problemSummary: "рокро┐ро░роЪрпНроЪройрпИ роЪрпБро░рпБроХрпНроХроорпН",
religion: "роородроорпН",
caste: "роЪро╛родро┐",
occupation: "родрпКро┤ро┐ро▓рпН",
timestamp: "роирпЗро░роорпБродрпНродро┐ро░рпИ",
  },
  hi: {
    aadhaar: 'рдЖрдзрд╛рд░',
    mobile: 'рдореЛрдмрд╛рдЗрд▓',
    otp: 'рдУрдЯреАрдкреА',
    welcome: 'рд╕реНрд╡рд╛рдЧрдд рд╣реИ',
    fileForms: 'рдХрд╛рдиреВрдиреА рдлреЙрд░реНрдо рднрд░реЗрдВ',
    newForm: 'ЁЯУД рдирдпрд╛ рдХрд╛рдиреВрдиреА рдлреЙрд░реНрдо рднрд░реЗрдВ',
    continueDraft: 'ЁЯУЭ рдбреНрд░рд╛рдлреНрдЯ рдЖрд╡реЗрджрди рдЬрд╛рд░реА рд░рдЦреЗрдВ',
    uploadDocs: 'ЁЯУд рд╕рд╣рд╛рдпрдХ рджрд╕реНрддрд╛рд╡реЗрдЬрд╝ рдЕрдкрд▓реЛрдб рдХрд░реЗрдВ',
    acceptedFormats: 'рд╕реНрд╡реАрдХреГрдд рдкреНрд░рд╛рд░реВрдк: PDF, JPG, PNG',
    statusTitle: 'ЁЯУК рдЖрд╡реЗрджрди рд╕реНрдерд┐рддрд┐ рдХрд╛ рдЕрд╡рд▓реЛрдХрди',
    drafts: 'рдбреНрд░рд╛рдлреНрдЯ рдЖрд╡реЗрджрди',
    submitted: 'рдкреНрд░рд╕реНрддреБрдд рдЖрд╡реЗрджрди',
    uploaded: 'рдЕрдкрд▓реЛрдб рдХрд┐рдП рдЧрдП рджрд╕реНрддрд╛рд╡реЗрдЬрд╝',
    logout: 'ЁЯЪк рд▓реЙрдЧрдЖрдЙрдЯ',
    language: 'ЁЯМР рднрд╛рд╖рд╛',
    quickLinks: 'рддреНрд╡рд░рд┐рдд рд▓рд┐рдВрдХ',
    faqs: 'рдЕрдХреНрд╕рд░ рдкреВрдЫреЗ рдЬрд╛рдиреЗ рд╡рд╛рд▓реЗ рдкреНрд░рд╢реНрди',
    userGuide: 'рдЙрдкрдпреЛрдЧрдХрд░реНрддрд╛ рдорд╛рд░реНрдЧрджрд░реНрд╢рд┐рдХрд╛',
    govPortal: 'рд╕рд░рдХрд╛рд░реА рдкреЛрд░реНрдЯрд▓',
    terms: 'рдЙрдкрдпреЛрдЧ рдХреА рд╢рд░реНрддреЗрдВ',
    contact: 'рд╕рд╣рд╛рдпрддрд╛ рд╕реЗ рд╕рдВрдкрд░реНрдХ рдХрд░реЗрдВ',
    email: 'рдИрдореЗрд▓',
    phone: 'рдлреЛрди',
    hours: 'рдШрдВрдЯреЗ',
    address: 'рдкрддрд╛',
    about: 'рдкреНрд▓реЗрдЯрдлрд╝реЙрд░реНрдо рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ',
    aboutText: 'рдпрд╣ рдкреНрд▓реЗрдЯрдлрд╝реЙрд░реНрдо рдбрд┐рдЬрд┐рдЯрд▓ рдЗрдВрдбрд┐рдпрд╛ рдкрд╣рд▓ рдХреЗ рддрд╣рдд рдирд╛рдЧрд░рд┐рдХреЛрдВ рдХреЗ рд▓рд┐рдП рдмрд╣реБрднрд╛рд╖реА рдХрд╛рдиреВрдиреА рд╕реЗрд╡рд╛рдУрдВ рдХреЛ рд╕рд░рд▓ рдмрдирд╛рдиреЗ рдХреЗ рд▓рд┐рдП рд╡рд┐рдХрд╕рд┐рдд рдХрд┐рдпрд╛ рдЧрдпрд╛ рд╣реИред',
    copyright: () => `┬й ${new Date().getFullYear()} рднрд╛рд░рдд рд╕рд░рдХрд╛рд░ред рд╕рд░реНрд╡рд╛рдзрд┐рдХрд╛рд░ рд╕реБрд░рдХреНрд╖рд┐рддред ЁЯЗоЁЯЗ│`,
    popupTitle: 'рднрд╛рд╖рд╛ рдЪреБрдиреЗрдВ',
    applicationType: "рдЖрд╡реЗрджрди рдХрд╛ рдкреНрд░рдХрд╛рд░",
receivedThrough: "рдкреНрд░рд╛рдкреНрдд рдорд╛рдзреНрдпрдо",
problemSummary: "рд╕рдорд╕реНрдпрд╛ рдХрд╛ рд╕рд╛рд░рд╛рдВрд╢",
religion: "рдзрд░реНрдо",
caste: "рдЬрд╛рддрд┐",
occupation: "рд╡реНрдпрд╡рд╕рд╛рдп",
timestamp: "рд╕рдордп рдЯрд┐рдХрдЯ",
  },
  te: {
    aadhaar: 'р░Жр░зр░╛р░░р▒Н',
    mobile: 'р░ор▒Кр░мр▒Ир░▓р▒Н',
    otp: 'р░Ур░Яр▒Ар░кр▒А',
    welcome: 'р░╕р▒Нр░╡р░╛р░Чр░др░В',
    fileForms: 'р░Ър░Яр▒Нр░Яр░кр░░р░ор▒Ир░и р░лр░╛р░░р░╛р░▓р░ир▒Б р░жр░╛р░Цр░▓р▒Б р░Ър▒Зр░пр░Вр░бр░┐',
    newForm: 'ЁЯУД р░Хр▒Кр░др▒Нр░д р░лр░╛р░░р░В р░жр░╛р░Цр░▓р▒Б р░Ър▒Зр░пр░Вр░бр░┐',
    continueDraft: 'ЁЯУЭ р░ор▒Бр░╕р░╛р░пр░┐р░жр░╛ р░жр░░р░Цр░╛р░╕р▒Нр░др▒Бр░ир▒Б р░Хр▒Кр░ир░╕р░╛р░Чр░┐р░Вр░Ър░Вр░бр░┐',
    uploadDocs: 'ЁЯУд р░ор░жр▒Нр░жр░др▒Б р░кр░др▒Нр░░р░╛р░▓р░ир▒Б р░Ер░кр▒НтАМр░▓р▒Лр░бр▒Н р░Ър▒Зр░пр░Вр░бр░┐',
    acceptedFormats: 'р░Ер░Вр░Чр▒Ар░Хр░░р░┐р░Вр░Ър░┐р░и р░лр░╛р░░р▒Нр░ор░╛р░Яр▒Нр░▓р▒Б: PDF, JPG, PNG',
    statusTitle: 'ЁЯУК р░жр░░р░Цр░╛р░╕р▒Нр░др▒Б р░╕р▒Нр░ер░┐р░др░┐ р░Ер░╡р░▓р▒Лр░Хр░ир░В',
    drafts: 'р░ор▒Бр░╕р░╛р░пр░┐р░жр░╛ р░жр░░р░Цр░╛р░╕р▒Нр░др▒Бр░▓р▒Б',
    submitted: 'р░жр░╛р░Цр░▓р▒Б р░Ър▒Зр░╕р░┐р░и р░жр░░р░Цр░╛р░╕р▒Нр░др▒Бр░▓р▒Б',
    uploaded: 'р░Ер░кр▒НтАМр░▓р▒Лр░бр▒Н р░Ър▒Зр░╕р░┐р░и р░кр░др▒Нр░░р░╛р░▓р▒Б',
    logout: 'ЁЯЪк р░▓р░╛р░Чр▒Мр░Яр▒Н',
    language: 'ЁЯМР р░нр░╛р░╖',
    quickLinks: 'р░др▒Нр░╡р░░р░┐р░д р░▓р░┐р░Вр░Хр▒Бр░▓р▒Б',
    faqs: 'р░др░░р░Ър▒Бр░Чр░╛ р░Ер░бр░┐р░Чр▒З р░кр▒Нр░░р░╢р▒Нр░ир░▓р▒Б',
    userGuide: 'р░╡р░┐р░ир░┐р░пр▒Лр░Чр░жр░╛р░░р▒Бр░▓ р░Чр▒Ир░бр▒Н',
    govPortal: 'р░кр▒Нр░░р░нр▒Бр░др▒Нр░╡ р░кр▒Лр░░р▒Нр░Яр░▓р▒Н',
    terms: 'р░╡р░┐р░ир░┐р░пр▒Лр░Ч р░ир░┐р░мр░Вр░зр░ир░▓р▒Б',
    contact: 'р░╕р░╣р░╛р░пр░В р░Хр▒Лр░╕р░В р░╕р░Вр░кр▒Нр░░р░жр░┐р░Вр░Ър░Вр░бр░┐',
    email: 'р░Зр░ор▒Жр░пр░┐р░▓р▒Н',
    phone: 'р░лр▒Лр░ир▒Н',
    hours: 'р░кр░ир░┐р░Ър▒Зр░╕р▒З р░Чр░Вр░Яр░▓р▒Б',
    address: 'р░Ър░┐р░░р▒Бр░ир░╛р░ор░╛',
    about: 'р░╡р▒Зр░жр░┐р░Х р░Чр▒Бр░░р░┐р░Вр░Ър░┐',
    aboutText: 'р░И р░╡р▒Зр░жр░┐р░Х р░бр░┐р░Ьр░┐р░Яр░▓р▒Н р░Зр░Вр░бр░┐р░пр░╛ р░Ър▒Кр░░р░╡р░▓р▒Л р░нр░╛р░Чр░Вр░Чр░╛ р░нр░╛р░░р░д р░кр▒Мр░░р▒Бр░▓ р░Хр▒Лр░╕р░В р░Ер░ир▒Зр░Х р░кр▒Нр░░р░╛р░Вр░др▒Ар░п р░нр░╛р░╖р░▓р▒Нр░▓р▒Л р░Ър░Яр▒Нр░Яр░кр░░р░ор▒Ир░и р░╕р▒Зр░╡р░▓р░ир▒Б р░╕р░░р░│р▒Ар░Хр▒Гр░др░В р░Ър▒Зр░пр░бр░╛р░ир░┐р░Хр░┐ р░Ер░нр░┐р░╡р▒Гр░жр▒Нр░зр░┐ р░Ър▒Зр░пр░мр░бр░┐р░Вр░жр░┐.',
    copyright: () => `┬й ${new Date().getFullYear()} р░нр░╛р░░р░д р░кр▒Нр░░р░нр▒Бр░др▒Нр░╡р░В. р░Ер░ир▒Нр░ир░┐ р░╣р░Хр▒Нр░Хр▒Бр░▓р▒Б р░ир░┐р░▓р▒Бр░кр▒Бр░Хр▒Лр░мр░бр▒Нр░бр░╛р░пр░┐. ЁЯЗоЁЯЗ│`,
    popupTitle: 'р░нр░╛р░╖ р░Ор░Вр░Ър▒Бр░Хр▒Лр░Вр░бр░┐',
    applicationType: "р░жр░░р░Цр░╛р░╕р▒Нр░др▒Б р░░р░Хр░В",
receivedThrough: "р░Ер░Вр░жр░┐р░и р░ор░╛р░░р▒Нр░Чр░В",
problemSummary: "р░╕р░ор░╕р▒Нр░п р░╕р░Вр░Чр▒Нр░░р░╣р░В",
religion: "р░ор░др░В",
caste: "р░Хр▒Бр░▓р░В",
occupation: "р░╡р▒Гр░др▒Нр░др░┐",
timestamp: "р░╕р░ор░п р░ор▒Бр░жр▒Нр░░",

  },
  bn: {
    aadhaar: 'ржЖржзрж╛рж░',
    mobile: 'ржорзЛржмрж╛ржЗрж▓',
    otp: 'ржУржЯрж┐ржкрж┐',
    welcome: 'рж╕рзНржмрж╛ржЧрждржо',
    fileForms: 'ржЖржЗржирж┐ ржлрж░рзНржо ржЬржорж╛ ржжрж┐ржи',
    newForm: 'ЁЯУД ржирждрзБржи ржЖржЗржирж┐ ржлрж░рзНржо ржЬржорж╛ ржжрж┐ржи',
    continueDraft: 'ЁЯУЭ ржЦрж╕ржбрж╝рж╛ ржЖржмрзЗржжржи ржЪрж╛рж▓рж┐ржпрж╝рзЗ ржпрж╛ржи',
    uploadDocs: 'ЁЯУд рж╕рж╣рж╛ржпрж╝ржХ ржиржерж┐ ржЖржкрж▓рзЛржб ржХрж░рзБржи',
    acceptedFormats: 'ржЧрзГрж╣рзАржд ржлрж░ржорзНржпрж╛ржЯ: PDF, JPG, PNG',
    statusTitle: 'ЁЯУК ржЖржмрзЗржжржи ржЕржмрж╕рзНржерж╛ рж╕ржВржХрзНрж╖рж┐ржкрзНржд ржмрж┐ржмрж░ржг',
    drafts: 'ржЦрж╕ржбрж╝рж╛ ржЖржмрзЗржжржи',
    submitted: 'ржЬржорж╛ ржжрзЗржУржпрж╝рж╛ ржЖржмрзЗржжржи',
    uploaded: 'ржЖржкрж▓рзЛржб ржХрж░рж╛ ржиржерж┐',
    logout: 'ЁЯЪк рж▓ржЧржЖржЙржЯ',
    language: 'ЁЯМР ржнрж╛рж╖рж╛',
    quickLinks: 'ржжрзНрж░рзБржд рж▓рж┐ржЩрзНржХрж╕ржорзВрж╣',
    faqs: 'ржкрзНрж░рж╛ржпрж╝рж╢ржЗ ржЬрж┐ржЬрзНржЮрж╛рж╕рж┐ржд ржкрзНрж░рж╢рзНржирж╛ржмрж▓рзА',
    userGuide: 'ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзА ржЧрж╛ржЗржб',
    govPortal: 'рж╕рж░ржХрж╛рж░рж┐ ржкрзЛрж░рзНржЯрж╛рж▓',
    terms: 'ржмрзНржпржмрж╣рж╛рж░рзЗрж░ рж╢рж░рзНрждрж╛ржмрж▓рзА',
    contact: 'рж╕рж╣рж╛ржпрж╝рждрж╛ ржпрзЛржЧрж╛ржпрзЛржЧ',
    email: 'ржЗржорзЗржЗрж▓',
    phone: 'ржлрзЛржи',
    hours: 'рж╕ржоржпрж╝',
    address: 'ржарж┐ржХрж╛ржирж╛',
    about: 'ржкрзНрж▓рзНржпрж╛ржЯржлрж░рзНржо рж╕ржорзНржкрж░рзНржХрзЗ',
    aboutText: 'ржПржЗ ржкрзНрж▓рзНржпрж╛ржЯржлрж░рзНржоржЯрж┐ ржбрж┐ржЬрж┐ржЯрж╛рж▓ ржЗржирзНржбрж┐ржпрж╝рж╛ ржЙржжрзНржпрзЛржЧрзЗрж░ ржЕржзрзАржирзЗ ржмрж╣рзБ ржнрж╛рж╖рж╛ржпрж╝ ржирж╛ржЧрж░рж┐ржХржжрзЗрж░ ржЬржирзНржп ржЖржЗржирж┐ ржЖржмрзЗржжржи ржкрж░рж┐рж╖рзЗржмрж╛ржЧрзБрж▓рж┐ рж╕рж╣ржЬ ржХрж░рж╛рж░ ржЬржирзНржп рждрзИрж░рж┐ ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗред',
    copyright: () => `┬й ${new Date().getFullYear()} ржнрж╛рж░ржд рж╕рж░ржХрж╛рж░ред рж╕рж░рзНржмрж╕рзНржмрждрзНржм рж╕ржВрж░ржХрзНрж╖рж┐рждред ЁЯЗоЁЯЗ│`,
    popupTitle: 'ржнрж╛рж╖рж╛ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи',
    applicationType: "ржЖржмрзЗржжржи ржкрзНрж░ржХрж╛рж░",
receivedThrough: "ржкрзНрж░рж╛ржкрзНрждрж┐рж░ ржорж╛ржзрзНржпржо",
problemSummary: "рж╕ржорж╕рзНржпрж╛рж░ рж╕рж╛рж░рж╛ржВрж╢",
religion: "ржзрж░рзНржо",
caste: "ржЬрж╛рждрж┐",
occupation: "ржкрзЗрж╢рж╛",
timestamp: "ржЯрж╛ржЗржорж╕рзНржЯрзНржпрж╛ржорзНржк",
  },
};

const Dashboard = () => {
  const location = useLocation();
  const navigate = useNavigate();
  const queryParams = new URLSearchParams(location.search);
  const langParam = queryParams.get('lang')?.toLowerCase() || 'en';

  const [t, setT] = useState(translations.en);
  const [user, setUser] = useState(null);
  const [loading, setLoading] = useState(true);
  const [selectedLanguage, setSelectedLanguage] = useState(langParam);
  const [isPopupOpen, setIsPopupOpen] = useState(false);
  const [activeTab, setActiveTab] = useState('overview');
  const [searchQuery, setSearchQuery] = useState('');
  const [notifications, setNotifications] = useState(3);
  const [showNotifications, setShowNotifications] = useState(false);

  // Mock data for charts
  const formStatusData = [
    { name: 'Drafts', value: 4, color: '#3B82F6' },
    { name: 'Submitted', value: 10, color: '#10B981' },
    { name: 'Rejected', value: 2, color: '#EF4444' },
    { name: 'Under Review', value: 6, color: '#F59E0B' },
  ];

  const monthlySubmissionsData = [
    { month: 'Jan', submissions: 3 },
    { month: 'Feb', submissions: 5 },
    { month: 'Mar', submissions: 2 },
    { month: 'Apr', submissions: 7 },
    { month: 'May', submissions: 4 },
    { month: 'Jun', submissions: 9 }
  ];

  // Mock recent activity data
  const recentActivity = [
    { id: 1, type: 'submission', title: 'Tenant Complaint Form', status: 'submitted', date: '12 May 2025' },
    { id: 2, type: 'upload', title: 'ID Proof Document', status: 'approved', date: '10 May 2025' },
    { id: 3, type: 'form', title: 'Property Dispute', status: 'draft', date: '08 May 2025' },
    { id: 4, type: 'upload', title: 'Income Certificate', status: 'pending', date: '05 May 2025' },
  ];

  useEffect(() => {
    const selected = translations[selectedLanguage] || translations['en'];
    setT(selected);
    // Update URL with selected language
    const newUrl = new URL(window.location.href);
    newUrl.searchParams.set('lang', selectedLanguage);
    window.history.pushState({}, '', newUrl);
  }, [selectedLanguage]);

  useEffect(() => {
    const token = localStorage.getItem('token');
    if (!token) {
      navigate(`/login?lang=${selectedLanguage}`);
      return;
    }

    fetch('https://prathinidhi-backend-b6cg.onrender.com/dashboard', {
      method: 'GET',
      headers: {
        Authorization: `Bearer ${token}`,
        Accept: 'application/json',
      },
    })
      .then((res) => {
        if (!res.ok) throw new Error('Invalid token');
        return res.json();
      })
      .then((data) => setUser(data.user))
      .catch(() => {
        localStorage.removeItem('token');
        navigate(`/login?lang=${selectedLanguage}`);
      })
      .finally(() => setLoading(false));
  }, [selectedLanguage, navigate]);

  const handleLogout = () => {
    localStorage.removeItem('token');
    navigate(`/login?lang=${selectedLanguage}`);
  };

  const handleLanguageChange = (e) => {
    setSelectedLanguage(e.target.value);
  };

  const handleNewFormClick = () => {
    const token = localStorage.getItem('token');
    localStorage.setItem('preferredLanguage', selectedLanguage);
    navigate('/Complaint', {
      state: { token },
      search: `?lang=${selectedLanguage}`
    });
  };

  const getStatusClass = (status) => {
    switch (status) {
      case 'submitted': return styles.statusSubmitted;
      case 'approved': return styles.statusApproved;
      case 'draft': return styles.statusDraft;
      case 'pending': return styles.statusPending;
      default: return {};
    }
  };

  const getStatusIcon = (status) => {
    switch (status) {
      case 'submitted':
      case 'approved':
        return <CheckCircle size={16} />;
      case 'draft':
        return <Clock size={16} />;
      case 'pending':
        return <AlertCircle size={16} />;
      default:
        return null;
    }
  };

  if (loading) return (
    <div style={styles.loadingContainer}>
      <div style={styles.spinner}></div>
      <p>Loading dashboard...</p>
    </div>
  );

  return (
    <div style={styles.appContainer}>
      {/* Header */}
      <header style={styles.header}>
        <div style={styles.headerContainer}>
          <div style={styles.logoSection}>
            <img src="./indian-emblem.png" alt="Indian Emblem" style={styles.logo} />
            <img src="/prathinidhi.png" alt="Prathinidhi Logo" style={styles.logo} />
            <div>
              <h1 style={styles.title}>Prathinidhi</h1>
              <p style={styles.subtitle}>
                рд░рд╛рд╖реНрдЯреНрд░реАрдп рдмрд╣реБрднрд╛рд╖реА рд╡рд┐рдзрд┐рдХ рдлреЙрд░реНрдо рдкреЛрд░реНрдЯрд▓ | National Legal Form Portal
              </p>
            </div>
          </div>
          <div style={styles.rightNav}>
            <div style={styles.searchContainer}>
              <Search size={16} color="#64748b" />
              <input
                type="text"
                placeholder={t.searchPlaceholder || "Search forms..."}
                style={styles.searchInput}
                value={searchQuery}
                onChange={(e) => setSearchQuery(e.target.value)}
              />
            </div>

            <div style={styles.notificationContainer}>
              <button
                style={styles.iconButton}
                onClick={() => setShowNotifications(!showNotifications)}
                aria-label="Notifications"
              >
                <Bell size={20} />
                {notifications > 0 && (
                  <span style={styles.notificationBadge}>{notifications}</span>
                )}
              </button>
              {showNotifications && (
                <div style={styles.notificationDropdown}>
                  <h4 style={styles.notificationHeader}>Notifications</h4>
                  <div style={styles.notificationItem}>
                    <div style={styles.notificationDot}></div>
                    <p>Your form #32145 has been approved</p>
                  </div>
                  <div style={styles.notificationItem}>
                    <div style={styles.notificationDot}></div>
                    <p>Please upload your income proof document</p>
                  </div>
                  <div style={styles.notificationItem}>
                    <div style={styles.notificationDot}></div>
                    <p>Form submission deadline approaching</p>
                  </div>
                  <button style={styles.viewAllButton}>View all notifications</button>
                </div>
              )}
            </div>

            <select
              style={styles.languageSelect}
              value={selectedLanguage}
              onChange={handleLanguageChange}
              aria-label="Select Language"
            >
              <option value="en">English</option>
              <option value="hi">рд╣рд┐рдВрджреА</option>
              <option value="ta">родрооро┐ро┤рпН</option>
              <option value="te">р░др▒Жр░▓р▒Бр░Чр▒Б</option>
              <option value="bn">ржмрж╛ржВрж▓рж╛</option>
            </select>

            <button style={styles.logoutBtn} onClick={handleLogout} aria-label="Logout">
              {t.logout}
            </button>
          </div>
        </div>
      </header>

      <div style={styles.mainContainer}>
        {/* Sidebar */}
        <aside style={styles.sidebar}>
          <div style={styles.userProfile}>
            <div style={styles.userAvatar}>
              {user?.name ? user.name.charAt(0).toUpperCase() : 'U'}
            </div>
            <div style={styles.userInfo}>
              <h3 style={styles.userName}>{user?.name || 'User'}</h3>
              <p style={styles.userRole}>{user?.role || 'Guest'}</p>
            </div>
          </div>

          <nav style={styles.sidebarNav}>
            <button
              style={activeTab === 'overview' ? { ...styles.navItem, ...styles.activeNavItem } : styles.navItem}
              onClick={() => setActiveTab('overview')}
            >
              <span style={styles.navIcon}>ЁЯУК</span>
              {t.overview || 'Overview'}
            </button>
            <button
              style={activeTab === 'forms' ? { ...styles.navItem, ...styles.activeNavItem } : styles.navItem}
              onClick={() => setActiveTab('forms')}
            >
              <span style={styles.navIcon}>ЁЯУЭ</span>
              {t.forms || 'Forms'}
            </button>
            <button
              style={activeTab === 'complaints' ? { ...styles.navItem, ...styles.activeNavItem } : styles.navItem}
              onClick={() => setActiveTab('complaints')}
            >
              <span style={styles.navIcon}>ЁЯУБ</span>
              {t.complaints || 'Complaints'}
            </button>
          </nav>
        </aside>

        {/* Content Area */}
        <section style={styles.contentArea}>
          {/* Overview tab */}
          {activeTab === 'overview' && (
            <>
              <div style={styles.statsGrid}>
                <div style={styles.statCard}>
                  <h4>{t.formsSubmitted || 'Forms Submitted'}</h4>
                  <p>{formStatusData.reduce((acc, cur) => acc + cur.value, 0)}</p>
                </div>
                <div style={styles.statCard}>
                  <h4>{t.pendingApprovals || 'Pending Approvals'}</h4>
                  <p>{formStatusData.find((f) => f.name === 'Under Review')?.value || 0}</p>
                </div>
                <div style={styles.statCard}>
                  <h4>{t.rejectedForms || 'Rejected Forms'}</h4>
                  <p>{formStatusData.find((f) => f.name === 'Rejected')?.value || 0}</p>
                </div>
              </div>

              <div style={styles.chartsContainer}>
                <div style={styles.pieChartContainer}>
                  <h4>{t.formStatus || 'Form Status'}</h4>
                  <ResponsiveContainer width="100%" height={250}>
                    <PieChart>
                      <Pie
                        data={formStatusData}
                        dataKey="value"
                        nameKey="name"
                        cx="50%"
                        cy="50%"
                        outerRadius={80}
                        label
                      >
                        {formStatusData.map((entry, index) => (
                          <Cell key={`cell-${index}`} fill={entry.color} />
                        ))}
                      </Pie>
                      <Tooltip />
                    </PieChart>
                  </ResponsiveContainer>
                </div>

                <div style={styles.barChartContainer}>
                  <h4>{t.monthlySubmissions || 'Monthly Submissions'}</h4>
                  <ResponsiveContainer width="100%" height={250}>
                    <BarChart data={monthlySubmissionsData} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>
                      <CartesianGrid strokeDasharray="3 3" />
                      <XAxis dataKey="month" />
                      <YAxis />
                      <Tooltip />
                      <Bar dataKey="submissions" fill="#2563EB" />
                    </BarChart>
                  </ResponsiveContainer>
                </div>
              </div>

              <div style={styles.quickActions}>
                <button style={styles.newFormBtn} onClick={handleNewFormClick}>
                  {t.newForm || 'New Form'}
                </button>
                <button style={styles.uploadBtn}>
                  <Upload size={16} />
                  {t.uploadDocuments || 'Upload Documents'}
                </button>
              </div>

              <div style={styles.recentActivity}>
                <h3>{t.recentActivity || 'Recent Activity'}</h3>
                <ul style={styles.activityList}>
                  {recentActivity.map((activity) => (
                    <li key={activity.id} style={styles.activityItem}>
                      <div style={styles.activityIcon}>
                        {activity.type === 'submission' && <FileText size={20} />}
                        {activity.type === 'upload' && <Upload size={20} />}
                        {activity.type === 'form' && <Calendar size={20} />}
                      </div>
                      <div>
                        <h4>{activity.title}</h4>
                        <p>
                          <span style={getStatusClass(activity.status)}>
                            {getStatusIcon(activity.status)} {activity.status}
                          </span>{' '}
                          - {activity.date}
                        </p>
                      </div>
                    </li>
                  ))}
                </ul>
              </div>
            </>
          )}

          {/* Forms tab */}
          {activeTab === 'forms' && (
            <div>
              <h2>{t.forms || 'Forms'}</h2>
              <p>Form list and details go here.</p>
            </div>
          )}

          {/* Complaints tab */}
          {activeTab === 'complaints' && (
            <div>
              <h2>{t.complaints || 'Complaints'}</h2>
              <p>Complaint details go here.</p>
            </div>
          )}
        </section>
      </div>

      {/* Popup example (if needed) */}
      {isPopupOpen && (
        <div style={styles.popupOverlay} onClick={() => setIsPopupOpen(false)}>
          <div style={styles.popupContent} onClick={(e) => e.stopPropagation()}>
            <h3>Popup Title</h3>
            <p>Popup content...</p>
            <button onClick={() => setIsPopupOpen(false)}>Close</button>
          </div>
        </div>
      )}
    </div>
  );
};
// Enhanced styles object
const styles = {
  appContainer: {
    display: 'flex',
    flexDirection: 'column',
    minHeight: '100vh',
    backgroundColor: '#f8fafc',
  },
  header: {
    backgroundColor: '#0b5394',
    color: '#fff',
    padding: '12px 0',
    position: 'sticky',
    top: 0,
    width: '100%',
    zIndex: 1000,
    boxShadow: '0 4px 12px rgba(0, 0, 0, 0.1)',
    backdropFilter: 'saturate(180%) blur(12px)',
    transition: 'background-color 0.3s ease, box-shadow 0.3s ease',
    fontFamily: "'Merriweather', serif",
  },
  headerContainer: {
    maxWidth: 1300,
    margin: '0 auto',
    padding: '0 20px',
    display: 'flex',
    justifyContent: 'space-between',
    alignItems: 'center',
  },
  logoSection: {
    display: 'flex',
    alignItems: 'center',
    gap: 18,
  },
  logo: {
    height: 42,
    objectFit: 'contain',
    filter: 'drop-shadow(0 0 2px rgba(0,0,0,0.15))',
  },
  title: {
    fontSize: 24,
    fontWeight: 700,
    margin: 0,
    color: '#fff',
    letterSpacing: 0.5,
  },
  subtitle: {
    fontSize: 12,
    margin: '2px 0 0 0',
    color: '#e2e8f0',
    fontWeight: 500,
  },
  rightNav: {
    display: 'flex',
    alignItems: 'center',
    gap: 16,
  },
  searchContainer: {
    display: 'flex',
    alignItems: 'center',
    backgroundColor: 'rgba(255, 255, 255, 0.15)',
    borderRadius: 24,
    padding: '6px 16px',
    width: 240,
  },
  searchInput: {
    backgroundColor: 'transparent',
    border: 'none',
    color: '#fff',
    marginLeft: 8,
    width: '100%',
    outline: 'none',
    fontSize: 14,
  },
  languageSelect: {
    padding: '8px 12px',
    borderRadius: 6,
    border: 'none',
    backgroundColor: 'rgba(255, 255, 255, 0.15)',
    color: '#fff',
    fontWeight: 500,
    fontSize: 14,
    cursor: 'pointer',
    outline: 'none',
  },
  logoutBtn: {
    background: 'linear-gradient(45deg, #ffb300, #f29900)',
    color: '#111',
    border: 'none',
    padding: '8px 16px',
    borderRadius: 24,
    fontWeight: 600,
    fontSize: 14,
    cursor: 'pointer',
    boxShadow: '0 4px 8px rgba(255, 179, 0, 0.4)',
  },
  iconButton: {
    backgroundColor: 'rgba(255, 255, 255, 0.15)',
    border: 'none',
    borderRadius: '50%',
    width: 36,
    height: 36,
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    cursor: 'pointer',
    position: 'relative',
  },
  notificationBadge: {
    position: 'absolute',
    top: -4,
    right: -4,
    backgroundColor: '#EF4444',
    color: '#fff',
    borderRadius: '50%',
    width: 18,
    height: 18,
    fontSize: 11,
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
  },
  notificationContainer: {
    position: 'relative',
  },
  notificationDropdown: {
    position: 'absolute',
    top: 44,
    right: 0,
    backgroundColor: '#fff',
    borderRadius: 8,
    boxShadow: '0 10px 25px rgba(0, 0, 0, 0.1)',
    width: 300,
    padding: 12,
    zIndex: 1000,
  },
  notificationHeader: {
    margin: '0 0 12px 0',
    fontSize: 16,
    color: '#1e293b',
  },
  notificationItem: {
    display: 'flex',
    alignItems: 'flex-start',
    padding: '8px 0',
    borderBottom: '1px solid #f1f5f9',
    gap: 10,
  },
  notificationDot: {
    width: 8,
    height: 8,
    borderRadius: '50%',
    backgroundColor: '#3B82F6',
    marginTop: 6,
  },
  viewAllButton: {
    backgroundColor: '#f8fafc',
    border: 'none',
    borderRadius: 6,
    padding: 8,
    width: '100%',
    marginTop: 8,
    cursor: 'pointer',
    fontSize: 14,
    color: '#64748b',
  },
  mainContainer: {
    display: 'flex',
    flex: 1,
    maxWidth: 1300,
    margin: '0 auto',
    width: '100%',
    padding: 20,
    gap: 24,
  },
  sidebar: {
    width: 250,
    backgroundColor: '#fff',
    borderRadius: 12,
    boxShadow: '0 4px 12px rgba(0, 0, 0, 0.05)',
    padding: 20,
    display: 'flex',
    flexDirection: 'column',
    height: 'calc(100vh - 140px)',
    position: 'sticky',
    top: 100,
  },
  userProfile: {
    display: 'flex',
    alignItems: 'center',
    gap: 12,
    padding: '12px 0',
    borderBottom: '1px solid #f1f5f9',
    marginBottom: 20,
  },
  userAvatar: {
    width: 48,
    height: 48,
    borderRadius: '50%',
    backgroundColor: '#0b5394',
    color: '#fff',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    fontSize: 20,
    fontWeight: 600,
  },
  userInfo: {
    overflow: 'hidden',
  },
  userName: {
    margin: 0,
    fontSize: 16,
    fontWeight: 600,
    color: '#1e293b',
  },
  userRole: {
    margin: '2px 0 0 0',
    fontSize: 12,
    color: '#64748b',
  },
  sidebarNav: {
    display: 'flex',
    flexDirection: 'column',
    flex: 1,
  },
  navItem: {
    display: 'flex',
    alignItems: 'center',
    gap: 12,
    padding: '12px 16px',
    borderRadius: 8,
    margin: '4px 0',
    backgroundColor: 'transparent',
    color: '#334155',
    fontSize: 14,
    fontWeight: 500,
    border: 'none',
    cursor: 'pointer',
    transition: 'all 0.2s ease',
    textAlign: 'left',
  },
  navItemHover: {
    backgroundColor: '#eff6ff',
    color: '#0b5394',
    fontWeight: 600,
  },
  activeNavItem: {
    backgroundColor: '#eff6ff',
    color: '#0b5394',
    fontWeight: 600,
  },
  navIcon: {
    fontSize: 18,
  },
  sidebarFooter: {
    marginTop: 'auto',
    borderTop: '1px solid #f1f5f9',
    paddingTop: 16,
  },
  sidebarFooterTitle: {
    margin: '0 0 8px 0',
    fontSize: 14,
    fontWeight: 600,
    color: '#334155',
  },
  sidebarFooterText: {
    margin: '4px 0',
    fontSize: 13,
    color: '#64748b',
  },
  sidebarLink: {
    color: '#0b5394',
    textDecoration: 'none',
  },
  mainContent: {
    flex: 1,
    display: 'flex',
    flexDirection: 'column',
    gap: 24,
  },
  dashboardHeader: {
    display: 'flex',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginBottom: 16,
  },
  welcomeMessage: {
    margin: 0,
    fontSize: 24,
    fontWeight: 700,
    color: '#1e293b',
  },
  dashboardSubtitle: {
    margin: '4px 0 0 0',
    fontSize: 14,
    color: '#64748b',
  },
  dateContainer: {
    display: 'flex',
    alignItems: 'center',
    gap: 8,
    fontSize: 14,
    color: '#64748b',
    backgroundColor: '#fff',
    padding: '8px 16px',
    borderRadius: 8,
    boxShadow: '0 2px 4px rgba(0, 0, 0, 0.05)',
  },
  quickStats: {
    display: 'flex',
    gap: 24,
    flexWrap: 'wrap',
  },
  statCard: {
    background: 'linear-gradient(135deg, #4f46e5, #2563eb)',
    color: '#fff',
    borderRadius: 12,
    padding: 20,
    flex: '1 1 220px',
    boxShadow: '0 8px 16px rgba(37, 99, 235, 0.3)',
    display: 'flex',
    flexDirection: 'column',
    justifyContent: 'space-between',
  },
  statIcon: {
    fontSize: 36,
    marginBottom: 12,
  },
  statValue: {
    fontSize: 28,
    fontWeight: 700,
  },
  statLabel: {
    fontSize: 14,
    fontWeight: 600,
    opacity: 0.85,
  },
  statsChart: {
    backgroundColor: '#fff',
    borderRadius: 12,
    boxShadow: '0 4px 12px rgba(0, 0, 0, 0.05)',
    padding: 20,
  },
  chartTitle: {
    margin: '0 0 12px 0',
    fontSize: 16,
    fontWeight: 700,
    color: '#1e293b',
  },
  recentActivity: {
    backgroundColor: '#fff',
    borderRadius: 12,
    boxShadow: '0 4px 12px rgba(0, 0, 0, 0.05)',
    padding: 20,
    flex: 1,
    display: 'flex',
    flexDirection: 'column',
  },
  recentActivityHeader: {
    margin: '0 0 12px 0',
    fontSize: 18,
    fontWeight: 700,
    color: '#1e293b',
  },
  activityList: {
    overflowY: 'auto',
  },
  activityItem: {
    display: 'flex',
    flexDirection: 'column',
    borderBottom: '1px solid #f1f5f9',
    padding: '12px 0',
    gap: 6,
  },
  activityTitle: {
    margin: 0,
    fontSize: 14,
    fontWeight: 600,
    color: '#0b5394',
  },
  activityDescription: {
    margin: 0,
    fontSize: 13,
    color: '#64748b',
  },
  quickActions: {
    display: 'flex',
    gap: 16,
    flexWrap: 'wrap',
  },
  actionCard: {
    backgroundColor: '#0b5394',
    borderRadius: 12,
    padding: 20,
    flex: '1 1 200px',
    color: '#fff',
    cursor: 'pointer',
    display: 'flex',
    flexDirection: 'column',
    gap: 12,
    transition: 'background-color 0.3s ease',
  },
  actionCardHover: {
    backgroundColor: '#144e8e',
  },
  actionIcon: {
    fontSize: 28,
  },
  actionLabel: {
    fontSize: 16,
    fontWeight: 600,
  },
  complaintList: {
    backgroundColor: '#fff',
    borderRadius: 12,
    boxShadow: '0 4px 12px rgba(0, 0, 0, 0.05)',
    padding: 20,
    marginTop: 24,
  },
  complaintListHeader: {
    margin: '0 0 12px 0',
    fontSize: 18,
    fontWeight: 700,
    color: '#1e293b',
  },
  complaintItem: {
    padding: '12px 0',
    borderBottom: '1px solid #f1f5f9',
  },
  complaintTitle: {
    margin: 0,
    fontSize: 14,
    fontWeight: 600,
    color: '#0b5394',
  },
  complaintStatus: {
    fontSize: 12,
    color: '#64748b',
    marginTop: 4,
  },
};

export default Dashboard;