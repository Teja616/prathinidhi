import React, { useState, useEffect } from "react";
import { useLocation, useNavigate } from "react-router-dom";

const Login = () => {
  const location = useLocation();
  const navigate = useNavigate();

  const queryParams = new URLSearchParams(location.search);
  const selectedLanguage = queryParams.get('lang') || "en";

  const languageData = {
    en: {
      loginHeading: "Login to Your Account",
      aadhaar: "Aadhaar Number",
      mobile: "Mobile Number",
      otp: "OTP",
      loginBtn: "Login",
      footer1: "¬© 2025 Prathinidhi | A Government of India Initiative",
      footer2: "Made with üáÆüá≥ | Designed for every Indian citizen",
      privacy: "Privacy Policy",
      terms: "Terms of Use",
      help: "Help & Support",
    },
    te: {
      loginHeading: "‡∞Æ‡±Ä ‡∞ñ‡∞æ‡∞§‡∞æ‡∞≤‡±ã ‡∞≤‡∞æ‡∞ó‡∞ø‡∞®‡±ç ‡∞Ö‡∞µ‡±ç‡∞µ‡∞Ç‡∞°‡∞ø",
      aadhaar: "‡∞Ü‡∞ß‡∞æ‡∞∞‡±ç ‡∞®‡∞Ç‡∞¨‡∞∞‡±ç",
      mobile: "‡∞Æ‡±ä‡∞¨‡±à‡∞≤‡±ç ‡∞®‡∞Ç‡∞¨‡∞∞‡±ç",
      otp: "‡∞ì‡∞ü‡±Ä‡∞™‡±Ä",
      loginBtn: "‡∞≤‡∞æ‡∞ó‡∞ø‡∞®‡±ç",
      footer1: "¬© 2025 ‡∞™‡±ç‡∞∞‡∞§‡∞ø‡∞®‡∞ø‡∞ß‡∞ø | ‡∞≠‡∞æ‡∞∞‡∞§ ‡∞™‡±ç‡∞∞‡∞≠‡±Å‡∞§‡±ç‡∞µ‡∞Ç ‡∞Ø‡±ä‡∞ï‡±ç‡∞ï ‡∞í‡∞ï ‡∞ö‡∞∞‡±ç‡∞Ø",
      footer2: "‡∞≠‡∞æ‡∞∞‡∞§ ‡∞™‡±å‡∞∞‡±Å‡∞≤ ‡∞ï‡±ã‡∞∏‡∞Ç ‡∞∞‡±Ç‡∞™‡±ä‡∞Ç‡∞¶‡∞ø‡∞Ç‡∞ö‡∞¨‡∞°‡∞ø‡∞Ç‡∞¶‡∞ø üáÆüá≥",
      privacy: "‡∞ó‡±ã‡∞™‡±ç‡∞Ø‡∞§‡∞æ ‡∞µ‡∞ø‡∞ß‡∞æ‡∞®‡∞Ç",
      terms: "‡∞µ‡∞ø‡∞®‡∞ø‡∞Ø‡±ã‡∞ó ‡∞®‡∞ø‡∞¨‡∞Ç‡∞ß‡∞®‡∞≤‡±Å",
      help: "‡∞∏‡∞π‡∞æ‡∞Ø‡∞Ç & ‡∞Æ‡∞¶‡±ç‡∞¶‡∞§‡±Å",
    },
    hi: {
      loginHeading: "‡§Ö‡§™‡§®‡•á ‡§ñ‡§æ‡§§‡•á ‡§Æ‡•á‡§Ç ‡§≤‡•â‡§ó‡§ø‡§® ‡§ï‡§∞‡•á‡§Ç",
      aadhaar: "‡§Ü‡§ß‡§æ‡§∞ ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ",
      mobile: "‡§Æ‡•ã‡§¨‡§æ‡§á‡§≤ ‡§®‡§Ç‡§¨‡§∞",
      otp: "‡§ì‡§ü‡•Ä‡§™‡•Ä",
      loginBtn: "‡§≤‡•â‡§ó‡§ø‡§®",
      footer1: "¬© 2025 ‡§™‡•ç‡§∞‡§§‡§ø‡§®‡§ø‡§ß‡§ø | ‡§≠‡§æ‡§∞‡§§ ‡§∏‡§∞‡§ï‡§æ‡§∞ ‡§ï‡•Ä ‡§™‡§π‡§≤",
      footer2: "üáÆüá≥ ‡§ï‡•á ‡§∏‡§æ‡§• ‡§¨‡§®‡§æ‡§Ø‡§æ ‡§ó‡§Ø‡§æ | ‡§π‡§∞ ‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§®‡§æ‡§ó‡§∞‡§ø‡§ï ‡§ï‡•á ‡§≤‡§ø‡§è ‡§°‡§ø‡§ú‡§º‡§æ‡§á‡§® ‡§ï‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ",
      privacy: "‡§ó‡•ã‡§™‡§®‡•Ä‡§Ø‡§§‡§æ ‡§®‡•Ä‡§§‡§ø",
      terms: "‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡•Ä ‡§∂‡§∞‡•ç‡§§‡•á‡§Ç",
      help: "‡§∏‡§π‡§æ‡§Ø‡§§‡§æ ‡§î‡§∞ ‡§∏‡§Æ‡§∞‡•ç‡§•‡§®",
    },
    ta: {
      loginHeading: "‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡Æï‡Æ£‡Æï‡Øç‡Æï‡Æø‡Æ≤‡Øç ‡Æâ‡Æ≥‡Øç‡Æ®‡ØÅ‡Æ¥‡Øà‡Æï",
      aadhaar: "‡ÆÜ‡Æ§‡Ææ‡Æ∞‡Øç ‡Æé‡Æ£‡Øç",
      mobile: "‡ÆÆ‡Øä‡Æ™‡Øà‡Æ≤‡Øç ‡Æé‡Æ£‡Øç",
      otp: "‡Æì‡Æü‡Æø‡Æ™‡Æø",
      loginBtn: "‡Æâ‡Æ≥‡Øç‡Æ®‡ØÅ‡Æ¥‡Øà",
      footer1: "¬© 2025 ‡Æ™‡Æø‡Æ∞‡Æ§‡Æø‡Æ®‡Æø‡Æ§‡Æø | ‡Æá‡Æ®‡Øç‡Æ§‡Æø‡ÆØ ‡ÆÖ‡Æ∞‡Æö‡Æø‡Æ©‡Øç ‡ÆÆ‡ØÅ‡ÆØ‡Æ±‡Øç‡Æö‡Æø",
      footer2: "üáÆüá≥ ‡Æâ‡Æü‡Æ©‡Øç ‡Æâ‡Æ∞‡ØÅ‡Æµ‡Ææ‡Æï‡Øç‡Æï‡Æ™‡Øç‡Æ™‡Æü‡Øç‡Æü‡Æ§‡ØÅ | ‡Æí‡Æµ‡Øç‡Æµ‡Øä‡Æ∞‡ØÅ ‡Æá‡Æ®‡Øç‡Æ§‡Æø‡ÆØ‡Æ∞‡Øç‡Æï‡Æ≥‡ØÅ‡Æï‡Øç‡Æï‡ØÅ‡ÆÆ‡Øç ‡Æâ‡Æ∞‡ØÅ‡Æµ‡Ææ‡Æï‡Øç‡Æï‡Æ™‡Øç‡Æ™‡Æü‡Øç‡Æü‡Æ§‡ØÅ",
      privacy: "‡Æ§‡Æ©‡Æø‡ÆØ‡ØÅ‡Æ∞‡Æø‡ÆÆ‡Øà‡Æï‡Øç ‡Æï‡Øä‡Æ≥‡Øç‡Æï‡Øà",
      terms: "‡Æ™‡ÆØ‡Æ©‡Øç‡Æ™‡Ææ‡Æü‡Øç‡Æü‡ØÅ ‡Æµ‡Æø‡Æ§‡Æø‡Æï‡Æ≥‡Øç",
      help: "‡Æâ‡Æ§‡Æµ‡Æø & ‡ÆÜ‡Æ§‡Æ∞‡Æµ‡ØÅ",
    },
    bn: {
      loginHeading: "‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü‡ßá ‡¶≤‡¶ó‡¶á‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®",
      aadhaar: "‡¶Ü‡¶ß‡¶æ‡¶∞ ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞",
      mobile: "‡¶Æ‡ßã‡¶¨‡¶æ‡¶á‡¶≤ ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞",
      otp: "‡¶ì‡¶ü‡¶ø‡¶™‡¶ø",
      loginBtn: "‡¶≤‡¶ó‡¶á‡¶®",
      footer1: "¬© 2025 ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶®‡¶ø‡¶ß‡¶ø | ‡¶≠‡¶æ‡¶∞‡¶§ ‡¶∏‡¶∞‡¶ï‡¶æ‡¶∞‡ßá‡¶∞ ‡¶è‡¶ï‡¶ü‡¶ø ‡¶â‡¶¶‡ßç‡¶Ø‡ßã‡¶ó",
      footer2: "üáÆüá≥ ‡¶¶‡¶ø‡ßü‡ßá ‡¶§‡ßà‡¶∞‡¶ø | ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø ‡¶≠‡¶æ‡¶∞‡¶§‡ßÄ‡ßü ‡¶®‡¶æ‡¶ó‡¶∞‡¶ø‡¶ï‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶°‡¶ø‡¶ú‡¶æ‡¶á‡¶® ‡¶ï‡¶∞‡¶æ",
      privacy: "‡¶ó‡ßã‡¶™‡¶®‡ßÄ‡¶Ø‡¶º‡¶§‡¶æ ‡¶®‡ßÄ‡¶§‡¶ø",
      terms: "‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡ßá‡¶∞ ‡¶∂‡¶∞‡ßç‡¶§‡¶æ‡¶¨‡¶≤‡ßÄ",
      help: "‡¶∏‡¶æ‡¶π‡¶æ‡¶Ø‡ßç‡¶Ø ‡¶ì ‡¶∏‡¶π‡¶æ‡¶Ø‡¶º‡¶§‡¶æ",
    },
            
  };

  const langData = languageData[selectedLanguage] || languageData["en"];

  const [aadhaar, setAadhaar] = useState("");
  const [mobile, setMobile] = useState("");
  const [otp, setOtp] = useState("");
  const [errorMessage, setErrorMessage] = useState("");
  const [loading, setLoading] = useState(false);

  // ‚úÖ Redirect if token already exists
  useEffect(() => {
    const token = localStorage.getItem("token");
    if (token) {
      navigate(`/dashboard?lang=${selectedLanguage}`);
    }
  }, [navigate, selectedLanguage]);

  const handleLogin = async (e) => {
    e.preventDefault();
    setLoading(true);
    setErrorMessage("");

    const payload = { aadhaar, mobile, otp };

    try {
      const response = await fetch("https://prathinidhi-backend-r8dj.onrender.com/login", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(payload),
      });

      const result = await response.json();
      console.log("üîë Login result:", result);

      if (response.ok && result.token) {
        localStorage.setItem("token", result.token); // ‚úÖ Store token
        navigate(`/dashboard?lang=${selectedLanguage}`); // ‚úÖ Redirect
      } else {
        const errorMsg = result.detail
          ? typeof result.detail === 'string'
            ? result.detail
            : JSON.stringify(result.detail)
          : "Login failed";
        setErrorMessage(errorMsg);
      }
    } catch (error) {
      console.error("‚ùå Login error:", error);
      setErrorMessage("Something went wrong. Please try again later.");
    } finally {
      setLoading(false);
    }
  };

  return (
    <main style={styles.main}>
      <header style={styles.header}>
        <div style={styles.headerContainer}>
          <div style={styles.logoSection}>
          <img src = "./indian-emblem.png" alt = "Indian Emblem" style = {styles.logo}/>
            <img src="/prathinidhi.png" alt="Emblem" style={styles.logo} />
            <div>
              <h1 style={styles.title}>Prathinidhi</h1>
              <p style={styles.subtitle}>National Legal Form Portal</p>
            </div>
          </div>
        </div>
      </header>

      <section style={styles.loginSection}>
        <div style={styles.formContainer}>
          <h2 style={styles.loginHeading}>{langData.loginHeading}</h2>
          <form style={styles.form} onSubmit={handleLogin}>
            <div style={styles.formGroup}>
              <label>{langData.aadhaar}</label>
              <input
                type="text"
                placeholder={langData.aadhaar}
                style={styles.input}
                value={aadhaar}
                onChange={(e) => setAadhaar(e.target.value)}
                required
              />
            </div>
            <div style={styles.formGroup}>
              <label>{langData.mobile}</label>
              <input
                type="text"
                placeholder={langData.mobile}
                style={styles.input}
                value={mobile}
                onChange={(e) => setMobile(e.target.value)}
                required
              />
            </div>
            <div style={styles.formGroup}>
              <label>{langData.otp}</label>
              <input
                type="text"
                placeholder={langData.otp}
                style={styles.input}
                value={otp}
                onChange={(e) => setOtp(e.target.value)}
                required
              />
            </div>
            {errorMessage && <p style={styles.errorMessage}>{errorMessage}</p>}
            <button style={styles.loginBtn} type="submit" disabled={loading}>
              {loading ? "Logging in..." : langData.loginBtn}
            </button>
          </form>
        </div>
      </section>

      <footer style={styles.footer}>
        <div>{langData.footer1}</div>
        <div>{langData.footer2}</div>
        <div style={{ marginTop: "10px", fontSize: "12px" }}>
          <a href="/privacy" style={styles.footerLink}>{langData.privacy}</a> | 
          <a href="/terms" style={styles.footerLink}>{langData.terms}</a> | 
          <a href="/help" style={styles.footerLink}>{langData.help}</a>
        </div>
      </footer>
    </main>
  );
};

// Styling remains the same
const styles = {
  main: {
    fontFamily: "Segoe UI, sans-serif",
    backgroundColor: "#ffffff",
    color: "#333",
    paddingTop: "80px",
  },
  header: {
    backgroundColor: "#0b5394",
    color: "#fff",
    padding: "10px 0",
    position: "fixed",
    top: 0,
    width: "100%",
    zIndex: 999,
    boxShadow: "0 2px 5px rgba(0,0,0,0.1)",
  },
  headerContainer: {
    maxWidth: "1200px",
    margin: "0 auto",
    padding: "0 20px",
    display: "flex",
    justifyContent: "space-between",
    alignItems: "center",
  },
  logoSection: {
    display: "flex",
    alignItems: "center",
    gap: "15px",
  },
  logo: { height: "48px" },
  title: { fontSize: "26px", fontWeight: "bold", margin: 0 },
  subtitle: { fontSize: "13px", margin: 0 },
  loginSection: {
    padding: "60px 20px",
    textAlign: "center",
  },
  formContainer: {
    maxWidth: "400px",
    margin: "0 auto",
    padding: "20px",
    backgroundColor: "#f4f4f4",
    borderRadius: "8px",
    boxShadow: "0 4px 6px rgba(0,0,0,0.1)",
  },
  loginHeading: {
    fontSize: "24px",
    marginBottom: "20px",
    color: "#0b5394",
  },
  formGroup: {
    marginBottom: "20px",
  },
  input: {
    width: "100%",
    padding: "10px",
    fontSize: "16px",
    borderRadius: "4px",
    border: "1px solid #ccc",
  },
  loginBtn: {
    backgroundColor: "#0b5394",
    color: "#fff",
    padding: "10px 20px",
    fontSize: "16px",
    borderRadius: "4px",
    cursor: "pointer",
    border: "none",
    width: "100%",
  },
  errorMessage: {
    color: "red",
    fontSize: "14px",
    marginBottom: "10px",
  },
  footer: {
    backgroundColor: "#0b5394",
    color: "#fff",
    padding: "20px",
    textAlign: "center",
    fontSize: "14px",
    marginTop: "40px",
  },
  footerLink: {
    color: "#fff",
    textDecoration: "none",
  },
};

export default Login;
